{"ast":null,"code":"var _jsxFileName = \"D:\\\\Huy\\\\orther\\\\3. RJS301x_1.0-A_VN\\\\Assgnment\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\MovieList .js\";\nimport React, { useState } from \"react\";\nimport MovieDetail from \"./MovieDetail \";\nimport classes from \"./MovieList.module.css\";\nconst MovieList = props => {\n  const [isClick, setIsClick] = useState(false);\n  const [showClickedMovie, setShowClickedMovie] = useState([]);\n  const [allMovie, setAllMovie] = useState([]);\n  let imageUrl = \"https://image.tmdb.org/t/p/w300\";\n  if (props.type === \"Original\") {\n    imageUrl = \"https://image.tmdb.org/t/p/w200\";\n  }\n  const showDetailHandler = event => {\n    setAllMovie(props.movies);\n    const clickedMovieIndex = allMovie.findIndex(item => item.id === Number(event.target.closest(\"li\").dataset.index));\n    const clickedMovie = allMovie[clickedMovieIndex];\n    const theRestMovie = allMovie.filter(item => item.id !== clickedMovie.id);\n    setAllMovie(theRestMovie);\n    if (clickedMovie) {\n      setShowClickedMovie(clickedMovie);\n      setIsClick(isClick => isClick = !isClick);\n      console.log(1);\n      console.log(allMovie);\n    } else {\n      setIsClick(false);\n      console.log(2);\n    }\n    console.log(allMovie);\n  };\n  const movieList = props.movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: movie.id,\n      className: classes[\"movie-item\"],\n      onClick: showDetailHandler,\n      \"data-index\": movie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: props.type === \"Original\" ? `${imageUrl}${movie.poster_path}` : `${imageUrl}${movie.backdrop_path}`,\n      alt: movie.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"type-content\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, props.type), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes[\"movie-list\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, movieList), isClick && /*#__PURE__*/React.createElement(MovieDetail, {\n    movie: showClickedMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }));\n};\nexport default MovieList;","map":{"version":3,"names":["React","useState","MovieDetail","classes","MovieList","props","isClick","setIsClick","showClickedMovie","setShowClickedMovie","allMovie","setAllMovie","imageUrl","type","showDetailHandler","event","movies","clickedMovieIndex","findIndex","item","id","Number","target","closest","dataset","index","clickedMovie","theRestMovie","filter","console","log","movieList","map","movie","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","poster_path","backdrop_path","alt","original_title"],"sources":["D:/Huy/orther/3. RJS301x_1.0-A_VN/Assgnment/Assignment 02 (Starter Code)/src/pages/browse/MovieList .js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport MovieDetail from \"./MovieDetail \";\r\nimport classes from \"./MovieList.module.css\";\r\n\r\n\r\nconst MovieList = (props) => {\r\n  const [isClick, setIsClick] = useState(false);\r\n  const [showClickedMovie, setShowClickedMovie] = useState([]);\r\n  const [allMovie, setAllMovie] =  useState([]) \r\n  let imageUrl = \"https://image.tmdb.org/t/p/w300\";\r\n  if (props.type === \"Original\") {\r\n    imageUrl = \"https://image.tmdb.org/t/p/w200\";\r\n  }\r\n  \r\n  const showDetailHandler = (event) => {\r\n    setAllMovie(props.movies)\r\n    const clickedMovieIndex = allMovie.findIndex(item => item.id === Number(event.target.closest(\"li\").dataset.index))\r\n    const clickedMovie =allMovie[clickedMovieIndex]\r\n    const theRestMovie = allMovie.filter(item => item.id !== clickedMovie.id)\r\n    setAllMovie(theRestMovie)\r\n    if(clickedMovie) {\r\n      setShowClickedMovie(clickedMovie)\r\n      setIsClick(isClick => isClick = !isClick)\r\n      console.log(1)\r\n      console.log(allMovie)\r\n    } else{\r\n      setIsClick(false)\r\n      console.log(2)\r\n    }\r\n    \r\n    console.log(allMovie)\r\n  }\r\n    \r\n  \r\n  const movieList = props.movies.map((movie) => {\r\n    return (\r\n      <li\r\n        key={movie.id}\r\n        className={classes[\"movie-item\"]}\r\n        onClick={showDetailHandler}\r\n        data-index = {movie.id}\r\n      >\r\n        <img\r\n          src={\r\n            props.type === \"Original\"\r\n              ? `${imageUrl}${movie.poster_path}`\r\n              : `${imageUrl}${movie.backdrop_path}`\r\n          }\r\n          alt={movie.original_title}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes[\"type-content\"]}>\r\n      <h2 className={classes.type}>{props.type}</h2>\r\n      <ul className={classes[\"movie-list\"]}>{movieList}</ul>\r\n      {isClick && <MovieDetail movie = {showClickedMovie}/>}\r\n    </div>\r\n  );\r\n};\r\nexport default MovieList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}